"use strict";(self.webpackChunkscrap_computers_docs=self.webpackChunkscrap_computers_docs||[]).push([[4850],{5163:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"Lua API/static-functions-namespaces/sc_syntax","title":"sc.syntax","description":"Allows you to add syntax highlighting to lua code to be showned in GUI\'s","source":"@site/docs/Lua API/static-functions-namespaces/sc_syntax.md","sourceDirName":"Lua API/static-functions-namespaces","slug":"/Lua API/static-functions-namespaces/sc_syntax","permalink":"/docs/Lua API/static-functions-namespaces/sc_syntax","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"sc.syntax","description":"Allows you to add syntax highlighting to lua code to be showned in GUI\'s"},"sidebar":"sidebar","previous":{"title":"sc.sha256","permalink":"/docs/Lua API/static-functions-namespaces/sc_sha256"},"next":{"title":"sc.table","permalink":"/docs/Lua API/static-functions-namespaces/sc_table"}}');var i=t(4848),c=t(8453);const o={title:"sc.syntax",description:"Allows you to add syntax highlighting to lua code to be showned in GUI's"},a=void 0,r={},h=[{value:"Functions",id:"functions",level:2},{value:"highlightCode",id:"highlightcode",level:3}];function l(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["sc.syntax lets you add syntax highlighting to lua code to be showned in a MyGui textbox/editbox OR towards ",(0,i.jsx)(s.a,{href:"/docs/Lua%20API/static-functions-namespaces/sc_ascf",children:"sc.ascfont"}),"!"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(s.h3,{id:"highlightcode",children:"highlightCode"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-lua",children:"sc.syntax.highlightCode( source, exceptionLines )\n"})}),"\n",(0,i.jsx)(s.p,{children:"Adds syntax highlighting to the source and returns it. You can also mark exceptionLines, The first one is where the actual error happened and the rest are code that leads to that error. If you dont want that, set it to a empty table"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["source [ ",(0,i.jsx)(s.strong,{children:"string"})," ] The source to highlight"]}),"\n",(0,i.jsxs)(s.li,{children:["exceptionLines [ ",(0,i.jsx)(s.strong,{children:"integer[]"})," ] Lines where the exceptions happened"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["[ ",(0,i.jsx)(s.strong,{children:"string"})," ] The highlighted code"]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const i={},c=n.createContext(i);function o(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);