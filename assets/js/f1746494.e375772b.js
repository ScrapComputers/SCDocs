"use strict";(self.webpackChunkscrap_computers_docs=self.webpackChunkscrap_computers_docs||[]).push([[6020],{8014:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>x,frontMatter:()=>t,metadata:()=>l,toc:()=>h});var i=r(4848),s=r(8453);const t={title:"BitStream",description:"A Bitstream that is a stream of bits!"},d=void 0,l={id:"Addon API/user-data/bitstream",title:"BitStream",description:"A Bitstream that is a stream of bits!",source:"@site/docs/Addon API/user-data/bitstream.md",sourceDirName:"Addon API/user-data",slug:"/Addon API/user-data/bitstream",permalink:"/docs/Addon API/user-data/bitstream",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"BitStream",description:"A Bitstream that is a stream of bits!"},sidebar:"sidebar",previous:{title:"Userdata",permalink:"/docs/category/userdata"},next:{title:"MD5Stream",permalink:"/docs/Addon API/user-data/md5stream"}},a={},h=[{value:"Fields",id:"fields",level:2},{value:"Functions",id:"functions",level:2},{value:"dumpString",id:"dumpstring",level:3},{value:"dumpBase64",id:"dumpbase64",level:3},{value:"dumpHex",id:"dumphex",level:3},{value:"writeBit",id:"writebit",level:3},{value:"readBit",id:"readbit",level:3},{value:"writeByte",id:"writebyte",level:3},{value:"readByte",id:"readbyte",level:3},{value:"writeInt8",id:"writeint8",level:3},{value:"readInt8",id:"readint8",level:3},{value:"writeUInt8",id:"writeuint8",level:3},{value:"readUInt8",id:"readuint8",level:3},{value:"writeInt16",id:"writeint16",level:3},{value:"readInt16",id:"readint16",level:3},{value:"writeUInt16",id:"writeuint16",level:3},{value:"readUInt16",id:"readuint16",level:3},{value:"writeInt24",id:"writeint24",level:3},{value:"readInt24",id:"readint24",level:3},{value:"writeUInt24",id:"writeuint24",level:3},{value:"readUInt24",id:"readuint24",level:3},{value:"writeInt32",id:"writeint32",level:3},{value:"readInt32",id:"readint32",level:3},{value:"writeUInt32",id:"writeuint32",level:3},{value:"readUInt32",id:"readuint32",level:3},{value:"writeString",id:"writestring",level:3},{value:"readString",id:"readstring",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"A Bitstream that is a stream of bits! (What did you expect!)"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pos"})," [ ",(0,i.jsx)(n.strong,{children:"number"})," ] The position in the string itself (Bit by Bit!)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bytePos"})," [ ",(0,i.jsx)(n.strong,{children:"number"})," ] he position in the string itself (Byte by Byte!)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"size"})," [ ",(0,i.jsx)(n.strong,{children:"number"})," ] The size of the stream."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.h3,{id:"dumpstring",children:"dumpString"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:dumpString()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dumps the string."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"string"})," ] dumpedString The dumped string."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"dumpbase64",children:"dumpBase64"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:dumpBase64()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dumps the string (as base64)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"string"})," ] dumpedString The dumped string."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"dumphex",children:"dumpHex"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:dumpHex()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dumps the string (as hex)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"string"})," ] dumpedString The dumped string."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writebit",children:"writeBit"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeBit( bit )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a bit."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["bit [ ",(0,i.jsx)(n.strong,{children:"boolean|integer"})," ] The bit value to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readbit",children:"readBit"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readBit()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a bit."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] 0 or 1 for bit value. Nil if it overflows."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writebyte",children:"writeByte"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeByte( byte )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a byte."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["byte [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The byte to write (Integer because it must be as ASCII char)."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readbyte",children:"readByte"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readByte()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a byte."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"string?"})," ] byte The byte it has read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeint8",children:"writeInt8"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeInt8( integer )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a signed 8-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["integer [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readint8",children:"readInt8"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readInt8()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a signed 8-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The signed 8-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeuint8",children:"writeUInt8"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeUInt8( uinteger )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes an unsigned 8-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["uinteger [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The unsigned integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readuint8",children:"readUInt8"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readUInt8()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads an unsigned 8-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The unsigned 8-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeint16",children:"writeInt16"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeInt16( integer )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a signed 16-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["integer [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The signed integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readint16",children:"readInt16"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readInt16()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a signed 16-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The signed 16-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeuint16",children:"writeUInt16"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeUInt16( uinteger )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes an unsigned 16-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["uinteger [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The unsigned integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readuint16",children:"readUInt16"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readUInt16()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads an unsigned 16-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The unsigned 16-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeint24",children:"writeInt24"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeInt24( integer )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a signed 24-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["integer [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The signed integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readint24",children:"readInt24"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readInt24()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a signed 24-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The signed 24-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeuint24",children:"writeUInt24"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeUInt24( uinteger )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes an unsigned 24-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["uinteger [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The unsigned integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readuint24",children:"readUInt24"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readUInt24()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads an unsigned 24-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The unsigned 24-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeint32",children:"writeInt32"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeInt32( integer )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a signed 32-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["integer [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The signed integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readint32",children:"readInt32"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readInt32()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a signed 32-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The signed 32-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writeuint32",children:"writeUInt32"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeUInt32( uinteger )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes an unsigned 32-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["uinteger [ ",(0,i.jsx)(n.strong,{children:"integer"})," ] The unsigned integer to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readuint32",children:"readUInt32"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readUInt32()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads an unsigned 32-bit integer."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"integer?"})," ] The unsigned 32-bit integer read."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"writestring",children:"writeString"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:writeString( str )\n"})}),"\n",(0,i.jsx)(n.p,{children:"Writes a string."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["str [ ",(0,i.jsx)(n.strong,{children:"string"})," ] The string to write."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"readstring",children:"readString"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"BitStream:readString()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Reads a string."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[ ",(0,i.jsx)(n.strong,{children:"string?"})," ] The string read."]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);